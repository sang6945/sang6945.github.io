# Simple workflow for deploying static content to GitHub Pages
# GitHub Pages에 정적 콘텐츠를 배포하기 위한 간단한 워크플로우

name: Deploy static content to Pages
# 워크플로우의 이름을 지정합니다.

on:
  # Runs on pushes targeting the default branch
  # 기본 브랜치로 푸시할 때 실행됩니다.
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  # Actions 탭에서 이 워크플로우를 수동으로 실행할 수 있습니다.
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# GITHUB_TOKEN의 권한을 설정하여 GitHub Pages로 배포할 수 있도록 합니다.
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# 한 번에 하나의 배포만 허용하며, 실행 중인 작업과 최신으로 대기 중인 작업 사이에 대기 중인 작업은 건너뜁니다.
# 그러나 실행 중인 작업을 취소하지 않으므로 이러한 프로덕션 배포가 완료될 수 있도록 합니다.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  # 단일 배포 작업입니다. 배포만 수행하기 때문에 하나의 작업만 있습니다.
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # 코드를 체크아웃합니다.

      - name: Setup Pages
        uses: actions/configure-pages@v3
        # GitHub Pages를 설정합니다.

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          # 전체 리포지토리를 업로드합니다.
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        # GitHub Pages로 배포합니다.
